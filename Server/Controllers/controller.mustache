/************************************************************************************************************************************/
/**************************************************** {{controllerTitle}} ***********************************************************/
/************************************************************************************************************************************/

var {{controllerTitle}} = require('../Models/{{controllerTitle}}.js');

/**
* rota que chama a funcao save para fazer um insert a tabela {{controllerTitle}}
*/
router.post('/{{controllerTitle}}', function (req, res) {
    mapping(req.body, {{controllerTitle}}).save(function(){
        res.send('Registo Inserido');
        }); //converte o objeto retornado no corpo do pedido num objeto do tipo Aluno
});

/**
* rota que chama a funcao all que faz um select de toda a informacao numa tabela {{controllerTitle}}
*/
router.get('/{{controllerTitle}}', function (req, res) {
    {{controllerTitle}}.all(function (rows) { //função de callback que quando for retornado os dados na base de dados, os mesmos serão enviados em json
        res.json(JSON.stringify(rows));
    });
});

/**
* rota que chama a funcao get que faz um select de uma determinada coluna a tabela {{controllerTitle}} 
*/
router.get('/{{controllerTitle}}/:id', function (req, res) {
    {{controllerTitle}}.get(req.params.id, function (row) {
        res.json(JSON.stringify(row));
    });
});

/**
* rota que chama a funcao save para fazer um update de uma coluna a tabela {{controllerTitle}}
*/
router.put('/{{controllerTitle}}/:id', function (req, res) { //o id tanto poderia ir no corpo da mensagem como por parâmetro no url
    var obj = mapping(req.body, {{controllerTitle}});
    obj.id = req.params.id; //no caso de ir no corpo da mensagem tem de se fazer a atribuição do id após o mapeamento do objeto
    obj.save(function (err) { //devolve true em caso de ter feito o save sem qualquer erro
        res.json({
            success: !err
        });
    });
});

/**
* rota que chama a funcao delete que faz um delete de uma coluna da tabela {{controllerTitle}}
*/
router.delete('/{{controllerTitle}}/:id', function (req, res) {
    {{controllerTitle}}.delete(req.params.id, function (err) {
        res.json({
            success: !err
        });
    });
});